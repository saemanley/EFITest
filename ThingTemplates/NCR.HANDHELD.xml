<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b557"
 majorVersion="8"
 minorVersion="2"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="7"
 schemaVersion="1020"
 universal="">
    <ThingTemplates>
        <ThingTemplate
         baseThingTemplate="NCR.BaseDevice"
         description="Template for Android/iOS handheld Devices based on NCR.BaseDevice"
         documentationContent=""
         effectiveThingPackage="TW.UTL.RemoteThingWithTunnelsAndFileTransferPackage"
         homeMashup=""
         lastModifiedDate="2018-11-06T02:37:23.474Z"
         name="NCR.HANDHELD"
         projectName="DCS. Project.Main"
         tags="Applications:NCR;DCS:Mashup;Applications:DCS"
         thingPackage=""
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read>
                    <Principal
                     isPermitted="true"
                     name="NCR.DCS.EMS"
                     type="Group"></Principal>
                </Read>
                <Update>
                    <Principal
                     isPermitted="true"
                     name="NCR.DCS.EMS"
                     type="Group"></Principal>
                </Update>
                <Delete>
                    <Principal
                     isPermitted="true"
                     name="NCR.DCS.EMS"
                     type="Group"></Principal>
                </Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="QueryImplementingThingsWithData">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.Mashup"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="DCS:EMS"
                     type="OrganizationalUnit"></Principal>
                    <Principal
                     isPermitted="true"
                     name="DCS:SCM"
                     type="OrganizationalUnit"></Principal>
                    <Principal
                     isPermitted="true"
                     name="DCS:TCS"
                     type="OrganizationalUnit"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTables>
                <ConfigurationTable
                 description="Tunneling Destinations"
                 isMultiRow="true"
                 name="Tunnels"
                 ordinal="1">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.defaultValue=""
                             aspect.friendlyName="Application Path"
                             baseType="STRING"
                             description="Location of the client app that will use this tunnel"
                             name="appUri"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue=""
                             aspect.friendlyName="Description"
                             baseType="STRING"
                             description="A description of the tunnel"
                             name="description"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="127.0.0.1"
                             aspect.friendlyName="Host"
                             baseType="STRING"
                             description="Host or IP that this tunnel will connect to at the edge"
                             name="host"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="vnc"
                             aspect.friendlyName="Name"
                             baseType="STRING"
                             description="Name of the tunnel"
                             name="name"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="1.0"
                             aspect.friendlyName="Number of Connects"
                             baseType="NUMBER"
                             description="The number of connections required to establish this tunnel"
                             name="numConnects"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="5900.0"
                             aspect.friendlyName="Port"
                             baseType="NUMBER"
                             description="Port that this tunnel will connect to at the edge"
                             name="port"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="tcp"
                             aspect.friendlyName="Protocol"
                             baseType="STRING"
                             description="The protocol used over this tunnel"
                             name="proto"
                             ordinal="6"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 description="General Settings"
                 isMultiRow="false"
                 name="TunnelSettings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Enable Tunneling"
                             aspect.isNullable="true"
                             baseType="BOOLEAN"
                             description="Enable tunneling"
                             name="enableTunneling"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row></Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="clearCache"
                 sourceName="clearCache"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="deleteAgent"
                 sourceName="deleteAgent"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="deleteApk"
                 sourceName="deleteApk"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="getBluetoothDiagnostics"
                 sourceName="getBluetoothDiagnostics"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="getCacheSize"
                 sourceName="getCacheSize"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="getSystemDiagnostics"
                 sourceName="getSystemDiagnostics"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="getWifiDiagnostics"
                 sourceName="getWifiDiagnostics"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="installOrUpdateApk"
                 sourceName="installOrUpdateApk"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="ledFlashCradle"
                 sourceName="ledFlashCradle"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="patchOS"
                 sourceName="patchOS"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="pullFileFromServerToAgent"
                 sourceName="pullFileFromServerToAgent"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="pushFileFromAgentToServer"
                 sourceName="pushFileFromAgentToServer"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="rebootHandHeld"
                 sourceName="rebootHandHeld"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="restartConnection"
                 sourceName="restartConnection"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="setBluetooth"
                 sourceName="setBluetooth"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="setBrightnessAutoMode"
                 sourceName="setBrightnessAutoMode"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="setCustomBrightness"
                 sourceName="setCustomBrightness"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="unLockHandheld"
                 sourceName="unLockHandheld"
                 timeout="0"></RemoteServiceBinding>
                <RemoteServiceBinding
                 enableQueue="false"
                 name="updateAgent"
                 sourceName="updateAgent"
                 timeout="0"></RemoteServiceBinding>
            </RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Cache"
                     description="This service will be called from server to clear agent cache."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="clearCache">
                        <ResultType
                         baseType="BOOLEAN"
                         description="Boolean based on success/failure."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description="Create Incident Service based on Asset ID"
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="CreateIncident">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="true"
                     category=""
                     description="This service will be called from server to delete agent from device ."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="deleteAgent">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="APP_MANAGER"
                     description="This service will be called from server to delete apk with a particular package name.&#xA;     * @param packageName : Package to be deleted.&#xA;     * @return : true/false status depending on uninstall."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="deleteApk">
                        <ResultType
                         baseType="BOOLEAN"
                         description="true/false status depending on uninstall. I f app already doesn't exist it will send true to notify its not there on device."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="Package to be deleted."
                             name="packageName"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Bluetooth"
                     description="This service will be called from server to get Bluetooth diagnostics."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getBluetoothDiagnostics">
                        <ResultType
                         baseType="STRING"
                         description="JSON value containing bluetooth diagnostics"
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Cache"
                     description="This service will be called from server to get Cache Size."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getCacheSize">
                        <ResultType
                         baseType="NUMBER"
                         description="Get Size in bytes"
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Diagnostics"
                     description="This service will be called from server to get System diagnostics.&#xA;     * @return : String value containing System diagnostics JSON"
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSystemDiagnostics">
                        <ResultType
                         baseType="STRING"
                         description="String value containing System diagnostics JSON"
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Wifi"
                     description="This service will be called from server to get Wifi diagnostics."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getWifiDiagnostics">
                        <ResultType
                         baseType="STRING"
                         description="Send JSON string with diagnostics content"
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="APP_MANAGER"
                     description=" /* This service will be called from server to install and update APK placed in Virtual Directory.&#xA;     * @param apkPath : Virtual path of the apk.&#xA;     * @param apkFileName : Apk File Name to be installed.&#xA;     * @param packageName : package Name to be installed, it will also decide to install or upgrade&#xA;     * @return : true/false status depending on install/update.&#xA;     */"
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="installOrUpdateApk">
                        <ResultType
                         baseType="BOOLEAN"
                         description="true/false status depending on install/update."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="Apk File Name to be installed"
                             name="apkFileName"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="Virtual path of the apk."
                             name="apkPath"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="package Name, will decide app will be ugraded or installed. If app is already there then it will upgrade."
                             name="packageName"
                             ordinal="3"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Cradle"
                     description="This service will flash lead light of the docked handheld.&#xA;     * @return : boolean value based on action is success or not."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="ledFlashCradle">
                        <ResultType
                         baseType="BOOLEAN"
                         description="boolean value based on action is success or not."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Patching"
                     description="This service will be called from server to patch the device.&#xA;     * @param String zipFilePath : Virtual Path on which zip file is placed&#xA;     * @param String zipFileName : Zip file name."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="patchOS">
                        <ResultType
                         baseType="BOOLEAN"
                         description="Boolean true/false status depending on install/update."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="Zip file name."
                             name="zipFileName"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="Virtual Path on which zip file is placed"
                             name="zipFilePath"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="FileTransfer"
                     description="This service will be called from server to get files from agent Virtual Directory.&#xA;     * @param async : execute as async or not.&#xA;     * @param serverPath : path on server to fetch file&#xA;     * @param serverFile : file on server to pull&#xA;     * @param agentPath : path on agent to get file&#xA;     * @param agentFile : name of the file on agent&#xA;     * @return : true/false status depending on copy status."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="pullFileFromServerToAgent">
                        <ResultType
                         baseType="BOOLEAN"
                         description="true/false status depending on copy status."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="name of the file on agent"
                             name="agentFile"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="path on agent to get file"
                             name="agentPath"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="false"
                             aspect.isRequired="true"
                             baseType="BOOLEAN"
                             description="execute as async or not."
                             name="async"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="file on server to pull"
                             name="serverFile"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="path on server to fetch file"
                             name="serverPath"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="FileTransfer"
                     description="This service will be called from server to get files to agent Virtual Directory."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="pushFileFromAgentToServer">
                        <ResultType
                         baseType="BOOLEAN"
                         description="true/false status depending on copy status"
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="name of the file on agent to send"
                             name="agentFile"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="path on agent to send file"
                             name="agentPath"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="false"
                             aspect.isRequired="true"
                             baseType="BOOLEAN"
                             description="execute as async or not."
                             name="async"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="file on server to be created"
                             name="serverFile"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="path on server to push file"
                             name="serverPath"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="PowerMangement"
                     description="This service will reboot the device."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="rebootHandHeld">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="true"
                     category="ApplicationRestart"
                     description="This service will be called from server to restart application connection."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="restartConnection">
                        <ResultType
                         baseType="NOTHING"
                         description=" Boolean based on success/failure"
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Bluetooth"
                     description="This service will be called from server to enable/disable Bluetooth."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="setBluetooth">
                        <ResultType
                         baseType="BOOLEAN"
                         description="boolean value based on action is success or not."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="false"
                             aspect.isRequired="true"
                             baseType="BOOLEAN"
                             description="true will enable the bluetooth and false will disable it."
                             name="enable"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Brightness"
                     description="This service will be called from server to enable/disable auto Brightness mode.&#xA;@param mode : true will enable the auto brightness mode and false will disable it."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="setBrightnessAutoMode">
                        <ResultType
                         baseType="BOOLEAN"
                         description="boolean value based on action is success or not."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="true"
                             aspect.isRequired="true"
                             baseType="BOOLEAN"
                             description="true will enable the auto brightness mode and false will disable it."
                             name="mode"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Brightness"
                     description="This service will be Set Brightness to particular brightness level in percentage.It will remove auto-brightness mode.&#xA;     * @param mode : percentage in integer value that will set brightness.&#xA;     * @return : Boolean value based on action is success or not."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="setCustomBrightness">
                        <ResultType
                         baseType="BOOLEAN"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="50.0"
                             aspect.isRequired="true"
                             aspect.maximumValue="100.0"
                             aspect.minimumValue="0.0"
                             aspect.units="%"
                             baseType="NUMBER"
                             description=" percentage in integer value that will set brightness."
                             name="percentage"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="Cradle"
                     description="This service will be called from server to release handheld from dock.&#xA;     * @return : boolean value based on action is success or not."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="unLockHandheld">
                        <ResultType
                         baseType="BOOLEAN"
                         description="boolean value based on action is success or not."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category="APP_MANAGER"
                     description="This service will be called from server to update agent from APK placed in Virtual Directory.&#xA;     * @param apkPath : Virtual path of the agent apk.&#xA;     * @param apkFileName : Apk File Name of the agent.&#xA;     * @return : true/false status depending on update."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="updateAgent">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="Apk File Name of the agent."
                             name="apkFileName"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description="Virtual path of the agent apk."
                             name="apkPath"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="CreateIncident">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var lookupparams = {
                                            CiId:  me.Asset_ID
                                        };
                                        
                                        var lookupxml = Things["RanjanSQLDatabaseTest"].GetSoupLookup(lookupparams);
                                        
                                        var content = lookupxml.xmlinput;
                                        var headers = new Object();
                                        
                                        headers.SOAPAction = "";
                                        headers.Authorization = 'Basic c2EyMzA3NjE6V2VsY29tZURFQzIwMTdAOTBEZUMyMDE3';
                                        
                                        var params1 = {
                                        	proxyScheme: undefined /* STRING */,
                                        	headers: headers /* JSON */,
                                        	ignoreSSLErrors: undefined /* BOOLEAN */,
                                        	useNTLM: undefined /* BOOLEAN */,
                                        	workstation: undefined /* STRING */,
                                        	useProxy: undefined /* BOOLEAN */,
                                        	withCookies: undefined /* BOOLEAN */,
                                        	proxyHost: undefined /* STRING */,
                                        	url: "https://osbcert-ha.ncr.com/ext/Services/NEOS/NEOSCILookupUtilityServicePS" /* STRING */,
                                        	content: content /* XML */,
                                        	timeout: undefined /* NUMBER */,
                                        	proxyPort: undefined /* INTEGER */,
                                        	password: undefined /* STRING */,
                                        	domain: undefined /* STRING */,
                                        	username: undefined /* STRING */
                                        };
                                        
                                        var resultXML = Resources["ContentLoaderFunctions"].PostXML(params1);
                                        var firstname = resultXML.*::Body.*::CreateResponse.*::FirstName;
                                        var lastname = resultXML.*::Body.*::CreateResponse.*::LastName;
                                        var ciname = resultXML.*::Body.*::CreateResponse.*::CIName;
                                        var serialnum = resultXML.*::Body.*::CreateResponse.*::SerialNumber;
                                        var productid = resultXML.*::Body.*::CreateResponse.*::ProductID;
                                        var sitenumber = resultXML.*::Body.*::CreateResponse.*::SiteNumber;
                                        var mcn = resultXML.*::Body.*::CreateResponse.*::MasterCustomerNumber;
                                        var country = resultXML.*::Body.*::CreateResponse.*::CountryCode;
                                        var company = resultXML.*::Body.*::CreateResponse.*::Company;
                                        
                                        var xmlparams = {
                                            FirstName: firstname,
                                            LastName: lastname,
                                            Impact: '2-Significant/Large',
                                            ReportedSource: 'Email',
                                            ServiceType: 'User Service Restoration',
                                            Status: 0,
                                            ProblemSummary: me.BAT_Health,
                                            Notes: 'Battery health not Good',
                                            Urgency: '2-High',
                                            CIReconId: me.Asset_ID,
                                            PartNumber: productid,
                                            CITag: '',
                                            Sequence_Number: 123434567
                                        };
                                        
                                        var sqlresult = Things["RanjanSQLDatabaseTest"].CreateXMLForSoup(xmlparams);
                                        
                                        var content1 = sqlresult.xmlinput;
                                        
                                        var headers1 = new Object();
                                        
                                        headers1.SOAPAction = "";
                                        headers1.Authorization = 'Basic c2EyMzA3NjE6V2VsY29tZURFQzIwMTdAOTBEZUMyMDE3';
                                        
                                        var params = {
                                        	proxyScheme: undefined /* STRING */,
                                        	headers: headers1 /* JSON */,
                                        	ignoreSSLErrors: undefined /* BOOLEAN */,
                                        	useNTLM: undefined /* BOOLEAN */,
                                        	workstation: undefined /* STRING */,
                                        	useProxy: undefined /* BOOLEAN */,
                                        	withCookies: undefined /* BOOLEAN */,
                                        	proxyHost: undefined /* STRING */,
                                        	url: "https://osbcert-ha.ncr.com/ext/Services/IOT/IOTNEOSIntegrationWS" /* STRING */,
                                        	content: content1 /* XML */,
                                        	timeout: undefined /* NUMBER */,
                                        	proxyPort: undefined /* INTEGER */,
                                        	password: undefined /* STRING */,
                                        	domain: undefined /* STRING */,
                                        	username: undefined /* STRING */
                                        };
                                        
                                        // result: XML
                                        var resultXML1 = Resources["ContentLoaderFunctions"].PostXML(params);
                                        
                                        //var result = ""+resultXML1;
                                        var result= resultXML1.*::Body.*::IOTNEOSOutputResponseService.*::Incident_Number;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions>
                    <Subscription
                     enabled="true"
                     eventName="DataChange"
                     source=""
                     sourceProperty="OS_ALL"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="Event.DataChange:Property.OS_ALL">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            var objJSON = JSON.parse(me.OS_ALL);
                                            me.Asset_Model = objJSON.ModelNumber;
                                            me.Asset_Name = objJSON.Caption;
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription
                     enabled="true"
                     eventName="DataChange"
                     source=""
                     sourceProperty="OS_SerialNumber"
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="Event.DataChange:Property.OS_SerialNumber">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            me.Asset_Serial_Number = me.OS_SerialNumber;
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                </Subscriptions>
            </ThingShape>
            <ImplementedShapes>
                <ImplementedShape
                 name="NCR.DISKts"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="NCR.OSts"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="NCR.WIFIts"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="NCR.GEOLOCATIONts"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="NCR.CPUts"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="NCR.MEMORYts"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="NCR.CRADLEts"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="NCR.BATTERYts"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="NCR.SOFTWAREts"
                 type="ThingShape"></ImplementedShape>
                <ImplementedShape
                 name="NCR.EventConfigTs"
                 type="ThingShape"></ImplementedShape>
            </ImplementedShapes>
            <SharedConfigurationTables>
                <ConfigurationTable
                 description="Shared Tunneling Destinations"
                 isMultiRow="true"
                 name="SharedTunnels"
                 ordinal="1">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Application Path"
                             baseType="STRING"
                             description="Location of the client app that will use this tunnel"
                             name="appUri"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Description"
                             baseType="STRING"
                             description="A description of the tunnel"
                             name="description"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Host"
                             baseType="STRING"
                             description="Host or IP that this tunnel will connect to at the edge"
                             name="host"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Name"
                             baseType="STRING"
                             description="Name of the tunnel"
                             name="name"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Number of Connects"
                             baseType="NUMBER"
                             description="The number of connections required to establish this tunnel"
                             name="numConnects"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Port"
                             baseType="NUMBER"
                             description="Port that this tunnel will connect to at the edge"
                             name="port"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.friendlyName="Protocol"
                             baseType="STRING"
                             description="The protocol used over this tunnel"
                             name="proto"
                             ordinal="6"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 description="Shared Remote Tunneling Settings"
                 isMultiRow="false"
                 name="SharedTunnelSettings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="false"
                             aspect.friendlyName="Enable Tunneling"
                             baseType="BOOLEAN"
                             description="Enable tunneling"
                             name="enableTunneling"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <enableTunneling>true</enableTunneling>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </SharedConfigurationTables>
            <InstanceDesignTimePermissions>
                <Create></Create>
                <Read>
                    <Principal
                     isPermitted="true"
                     name="NCR.DCS.EMS"
                     type="Group"></Principal>
                </Read>
                <Update>
                    <Principal
                     isPermitted="true"
                     name="NCR.DCS.EMS"
                     type="Group"></Principal>
                </Update>
                <Delete>
                    <Principal
                     isPermitted="true"
                     name="NCR.DCS.EMS"
                     type="Group"></Principal>
                </Delete>
                <Metadata></Metadata>
            </InstanceDesignTimePermissions>
            <InstanceRunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.Mashup"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.Mashup"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.Mashup"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="false"
                         name="NCR.DCS.Mashup"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="NCR.DCS.EMS"
                         type="Group"></Principal>
                        <Principal
                         isPermitted="false"
                         name="NCR.DCS.Mashup"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </InstanceRunTimePermissions>
            <InstanceVisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="DCS:EMS"
                     type="OrganizationalUnit"></Principal>
                    <Principal
                     isPermitted="true"
                     name="DCS:SCM"
                     type="OrganizationalUnit"></Principal>
                    <Principal
                     isPermitted="true"
                     name="DCS:TCS"
                     type="OrganizationalUnit"></Principal>
                </Visibility>
            </InstanceVisibilityPermissions>
        </ThingTemplate>
    </ThingTemplates>
</Entities>
