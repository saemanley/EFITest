<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b557"
 majorVersion="8"
 minorVersion="2"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="7"
 schemaVersion="1020"
 universal="">
    <Things>
        <Thing
         aspect.isExtension="true"
         description=""
         documentationContent=""
         effectiveThingPackage="StreamThing"
         enabled="true"
         homeMashup=""
         identifier=""
         lastModifiedDate="2018-10-24T21:00:08.671Z"
         name="TW.RSM.RemoteServiceHistoryStream"
         projectName=""
         published="false"
         tags="Applications:RSM;Applications:RAC;Applications:FileTransfer;TWUTL:RemoteServices"
         thingTemplate="Stream"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="TW.RSM.RemoteServices"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTables>
                <ConfigurationTable
                 description="Data Thing Configuration"
                 isMultiRow="false"
                 name="DataThingSettings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description="Persistence Provider Name"
                             name="persistenceProvider"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <persistenceProvider>
                            <![CDATA[
                            ThingworxPersistenceProvider
                            ]]>
                            </persistenceProvider>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 description="Data Shape Configuration"
                 isMultiRow="false"
                 name="Settings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Data Shape"
                             baseType="DATASHAPENAME"
                             description="Data shape"
                             name="dataShape"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <accumulatedDataShape>
                                <json>
                                <![CDATA[
                                {"fieldDefinitions":{"numConnects":{"name":"numConnects","aspects":{},"description":"Number of connections tunnel will allow","baseType":"INTEGER","ordinal":8},"targetThing":{"name":"targetThing","aspects":{},"description":"Connected Thing being tunneled to","baseType":"STRING","ordinal":14},"bytesTransferred":{"name":"bytesTransferred","aspects":{},"description":"Number of bytes transferred","baseType":"NUMBER","ordinal":1},"code":{"name":"code","aspects":{},"description":"Current status code of this tunnel","baseType":"INTEGER","ordinal":2},"message":{"name":"message","aspects":{},"description":"Message about this tunnel's current state","baseType":"STRING","ordinal":7},"blockSize":{"name":"blockSize","aspects":{},"description":"Size of tunnel data buffer","baseType":"INTEGER","ordinal":0},"duration":{"name":"duration","aspects":{},"description":"Duration of the tunnel in milliseconds","baseType":"INTEGER","ordinal":3},"port":{"name":"port","aspects":{},"description":"Port that tunnel will connect to","baseType":"INTEGER","ordinal":9},"proto":{"name":"proto","aspects":{},"description":"Protocol being tunneled","baseType":"STRING","ordinal":10},"readTimeout":{"name":"readTimeout","aspects":{},"description":"Read timeout used at server endpoint","baseType":"INTEGER","ordinal":11},"tunnelId":{"name":"tunnelId","aspects":{"isPrimaryKey":true},"description":"The tunnel Id","baseType":"STRING","ordinal":15},"host":{"name":"host","aspects":{},"description":"Host that tunnel will connect to","baseType":"STRING","ordinal":5},"startTime":{"name":"startTime","aspects":{},"description":"Time the tunnel was initiated","baseType":"DATETIME","ordinal":12},"endTime":{"name":"endTime","aspects":{},"description":"Time the tunnel was completed","baseType":"DATETIME","ordinal":4},"state":{"name":"state","aspects":{},"description":"Current state of this tunnel","baseType":"STRING","ordinal":13},"user":{"name":"user","aspects":{},"description":"User that initiated the tunnel","baseType":"STRING","ordinal":17},"tunnelName":{"name":"tunnelName","aspects":{},"description":"Name of tunnel to open","baseType":"STRING","ordinal":16},"isComplete":{"name":"isComplete","aspects":{},"description":"Has this tunnel completed","baseType":"BOOLEAN","ordinal":6}}}
                                ]]>
                                </json>
                            </accumulatedDataShape>
                            <dataShape>
                            <![CDATA[
                            TunnelSession
                            ]]>
                            </dataShape>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="CleanEndDates">
                        <ResultType
                         baseType="LONG"
                         description="Number of records updated."
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="CleanEndDates">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result = 0;
                                        
                                        var query = {
                                          "filters": {
                                            "fieldName": "duration",
                                            "type": "EQ",
                                            "value": 0
                                          }
                                        };
                                        
                                        var params = {
                                            oldestFirst: true,
                                            maxItems: me.GetStreamEntryCount(),
                                            query: query
                                        };
                                        
                                        var entries = me.QueryStreamEntriesWithData(params);
                                        var tableLength = entries.rows.length;
                                        
                                        for (var x = 0; x < tableLength; x++) {
                                            var row = entries.rows[x];
                                            if (row.endTime && row.endTime < row.startTime) {
                                                row.endTime = null;
                                        
                                                var values = me.CreateValues();
                                                values.AddRow(row);
                                        
                                                params = {
                                                    values: values /* INFOTABLE*/,
                                                    streamEntryId: row.id /* STRING */,
                                                    source: row.source
                                                };
                                        
                                                me.UpdateStreamEntry(params);
                                                result += 1;
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
